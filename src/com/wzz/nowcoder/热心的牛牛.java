package com.wzz.nowcoder;

/**
 * @Date 2021/2/6 9:56
 * @created by wzz
 */
public class 热心的牛牛 {
    /**
     * 题目描述
     * 这一天你跟你的n个朋友一起出去玩，在出门前妈妈给了你k块糖果，你决定把这些糖果的一部分分享给你的朋友们。由于你非常热心，所以你希望你的每一个朋友分到的糖果数量都比你要多（严格意义的多，不能相等）。求你最多能吃到多少糖果？
     * <p>
     * 示例1
     * 输入
     * 复制
     * 2,10
     * 返回值
     * 复制
     * 2
     * 说明
     * 你可以分给你的两个朋友各4个糖果，这样你能吃到2个糖果，这样能保证你的每个朋友的糖果数都比你多，不存在你能吃到3个或者以上糖果的情况
     * <p>
     * <p>
     * 示例2
     * 输入
     * <p>
     * 3,11
     * 返回值
     * <p>
     * 2
     * 说明
     * 你可以分给你的3个朋友各3个糖果，这样你能吃到2个糖果，这样能保证你的每个朋友的糖果数都比你多
     * ，不存在你能吃到3个或者以上糖果的情况
     * <p>
     * <p>
     * 备注:
     * 对于百分之30的数据：1\leq n\leq 100,n\leq k\leq 1001≤n≤100,n≤k≤100
     * <p>
     * 对于百分之100的数据：1\leq n\leq 1e18,n\leq k\leq 1e181≤n≤1e18,n≤k≤1e18
     * <p>
     * 函数有两个long long型参数
     * <p>
     * 第一个参数代表题目中的n
     * <p>
     * 第二个参数代表题目中的k
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     * 返回牛牛能吃到的最多糖果数
     *
     * @param n long长整型
     * @param k long长整型
     * @return long长整型
     */
    public long Maximumcandies(long n, long k) {
        if (k % (n + 1) == n) {
            return k / (n + 1);
        }
        return k / (n + 1) - 1;
    }
}
