package com.wzz.nowcoder;

/**
 * @Date 2021/2/6 10:53
 * @created by wzz
 */
public class 牛牛做水题 {
    /**
     * 题目描述
     * 牛牛喜欢做题。但他不喜欢做难题，喜欢做水题。
     * 对于一个题号为的题而言，题目的难度为的所有因子之和除以。牛牛认为难度小于2的题目都是水题。
     * 例如：
     * 编号为25的题目，其难度为（1+5+25）/25=1.24<2，因此这道题是水题。
     * 编号为28的题目，其难度为（1+2+4+7+14+28）/28=2，因此这道题不是水题。
     * 编号为30的题目，其难度为（1+2+3+5+6+10+15+30）/30=2.4>2，因此这道题也不是水题。
     * 牛牛拿到了一个共有道题目的题单，上面的题号为1、2、3、...、。牛牛把上面所有的水题刷了个遍。每做一道编号为的水题，牛牛可以获得的快乐指数。
     * 牛牛想知道，自己一共能获得多少快乐指数？
     * 示例1
     * 输入
     * 复制
     * 4
     * 返回值
     * 复制
     * 10
     * 说明
     * 题号为1到4的四道题都是水题，所以牛牛全部做了，快乐指数为1+2+3+4=10
     * 示例2
     * 输入
     * 复制
     * 282
     * 返回值
     * 复制
     * 30101
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     * <p>
     * 返回牛牛获得的快乐指数
     *
     * @param n int整型 题单里的题目数量
     * @return int整型
     */
    public int doQuestion(int n) {
        int sum;
        int res = 0;
        for (int i = 1; i <= n; i++) {// 对1-n的每一个数进行处理
            // 重置当前题目的因子和
            sum = 0;
            for (int j = 1; j <= i; j++) {// 计算因子和的循环
                if (i % j == 0)
                    sum += j;
            }
            if (sum / i < 2) {// 水题
                res += i;
            }
        }
        return res;
    }
}
